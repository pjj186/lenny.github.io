{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/250918-dml/","result":{"data":{"site":{"siteMetadata":{"title":"Lenny.dev"}},"markdownRemark":{"id":"93c74984-72db-51a0-873e-a7ec9d37796d","excerpt":"DML (Data Manipulation Language) 데이터를 조작하는 언어에요. 명령어는 크게 두 분류로 나뉘어요. Update : 데이터를 추가하거나 수정하는 명령어, 데이터의 상태를 변화시키는? 그런 명령어들 Query : 데이터를 조회하는 명령어 Update Commands…","html":"<h1 id=\"dml-data-manipulation-language\" style=\"position:relative;\"><a href=\"#dml-data-manipulation-language\" aria-label=\"dml data manipulation language permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DML (Data Manipulation Language)</h1>\n<p>데이터를 조작하는 언어에요.</p>\n<p>명령어는 크게 두 분류로 나뉘어요.</p>\n<ol>\n<li>Update : 데이터를 추가하거나 수정하는 명령어, 데이터의 상태를 변화시키는? 그런 명령어들</li>\n<li>Query : 데이터를 조회하는 명령어</li>\n</ol>\n<hr/>\n<h2 id=\"update-commands\" style=\"position:relative;\"><a href=\"#update-commands\" aria-label=\"update commands permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update Commands</h2>\n<p>Update 명령어는 어떤것들이 있는지 한번 살펴보겠습니다.</p>\n<h3 id=\"insert-into-values\" style=\"position:relative;\"><a href=\"#insert-into-values\" aria-label=\"insert into values permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INSERT INTO VALUES</h3>\n<p>테이블에 데이터를 추가하는 명령어에요.</p>\n<p>문법은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> table_name <span class=\"token punctuation\">(</span>column1<span class=\"token punctuation\">,</span> column2<span class=\"token punctuation\">,</span> column3<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>value1<span class=\"token punctuation\">,</span> value2<span class=\"token punctuation\">,</span> value3<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>사용 예시</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> movies <span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> released<span class=\"token punctuation\">,</span> overview<span class=\"token punctuation\">,</span> rating<span class=\"token punctuation\">,</span> director<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>\n<span class=\"token string\">'The Dark Knight'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'2008'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'A superhero movie about a man who becomes a superhero and fights crime.'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'8.5'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'Christopher Nolan'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</blockquote>\n<h3 id=\"update\" style=\"position:relative;\"><a href=\"#update\" aria-label=\"update permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UPDATE</h3>\n<p>테이블에 데이터를 수정하는 명령어에요.</p>\n<p>문법은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> table_name <span class=\"token keyword\">SET</span> column1 <span class=\"token operator\">=</span> value1<span class=\"token punctuation\">,</span> column2 <span class=\"token operator\">=</span> value2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">WHERE</span> condition<span class=\"token punctuation\">;</span></code></pre></div>\n<p><span style=\"color:orange\">🚨 주의해야 할 점은 WHERE 조건이 없으면 테이블의 모든 데이터가 수정된다는 점이에요.</span></p>\n<blockquote>\n<p>사용 예시</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> movies <span class=\"token keyword\">SET</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'The Dark Knight'</span> <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre></div>\n</blockquote>\n<h3 id=\"delete\" style=\"position:relative;\"><a href=\"#delete\" aria-label=\"delete permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DELETE</h3>\n<p>테이블에 데이터를 삭제하는 명령어에요.</p>\n<p>문법은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> table_name <span class=\"token keyword\">WHERE</span> condition<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>사용 예시</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre></div>\n</blockquote>\n<h2 id=\"query-commands\" style=\"position:relative;\"><a href=\"#query-commands\" aria-label=\"query commands permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query Commands</h2>\n<p>Query 명령어는 어떤것들이 있는지 한번 살펴보겠습니다.</p>\n<h3 id=\"select\" style=\"position:relative;\"><a href=\"#select\" aria-label=\"select permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SELECT</h3>\n<p>테이블에 데이터를 조회하는 명령어에요.</p>\n<p>문법은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> column1<span class=\"token punctuation\">,</span> column2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">FROM</span> table_name <span class=\"token keyword\">WHERE</span> condition<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">FROM</code> 이 먼저 실행되어 movies 테이블의 모든 데이터를 가져오고 <code class=\"language-text\">SELECT</code> 로 어떤 컬럼을 결과물로 보여줄지 지정합니다.</p>\n<blockquote>\n<p>사용 예시</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> movies<span class=\"token punctuation\">;</span></code></pre></div>\n</blockquote>\n<p>다음과 같이 별칭을 붙여서도 조회할 수 있어요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> title <span class=\"token keyword\">AS</span> movie_title<span class=\"token punctuation\">,</span>\n    released <span class=\"token keyword\">AS</span> movie_released<span class=\"token punctuation\">,</span>\n    overview <span class=\"token keyword\">AS</span> movie_overview<span class=\"token punctuation\">,</span>\n    rating <span class=\"token keyword\">AS</span> movie_rating<span class=\"token punctuation\">,</span>\n    director <span class=\"token keyword\">AS</span> movie_director\n<span class=\"token keyword\">FROM</span> movies<span class=\"token punctuation\">;</span></code></pre></div>\n<p>별칭을 붙이면 조회된 데이터의 컬럼명을 변경할 수 있습니당.</p>\n<p>다음과 같이 연산자도 쓸 수 있구요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> rating <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token keyword\">AS</span> double_rating <span class=\"token keyword\">FROM</span> movies<span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 rating 컬럼의 값을 2배로 곱한 값이 double_rating 컬럼에 조회됩니다.</p>\n<h2 id=\"where\" style=\"position:relative;\"><a href=\"#where\" aria-label=\"where permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WHERE</h2>\n<p>WHERE 절은 조회할 데이터의 조건을 지정하는 명령어임니다.</p>\n<p>위에서 봤듯이 여러가지 문법과 조합해서 사용할 수 있죵.</p>\n<p>SELECT와 함께 사용할때도 WHERE 절을 사용하여 조회하려는 데이터의 범위를 좁힐 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">WHERE</span> rating <span class=\"token operator\">></span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 rating 컬럼의 값이 8보다 큰 데이터만 조회됩니다.</p>\n<p>다음과 같이 여러 조건을 조합해서 사용할 수 있어요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">WHERE</span> rating <span class=\"token operator\">></span> <span class=\"token number\">8</span> <span class=\"token operator\">AND</span> director <span class=\"token operator\">=</span> <span class=\"token string\">'Christopher Nolan'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"and-or\" style=\"position:relative;\"><a href=\"#and-or\" aria-label=\"and or permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AND, OR</h3>\n<p>WHERE 절에서 AND, OR 조건을 사용할 수 있어요.</p>\n<p>AND 조건은 두 조건이 모두 참일 때 조회돼요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">WHERE</span> rating <span class=\"token operator\">></span> <span class=\"token number\">8</span> <span class=\"token operator\">AND</span> director <span class=\"token operator\">=</span> <span class=\"token string\">'Christopher Nolan'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 rating 컬럼의 값이 8보다 크고 director 컬럼의 값이 'Christopher Nolan'인 데이터만 조회됩니다.</p>\n<p>OR 조건은 두 조건 중 하나라도 참일 때 조회돼요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">WHERE</span> rating <span class=\"token operator\">></span> <span class=\"token number\">8</span> <span class=\"token operator\">OR</span> director <span class=\"token operator\">=</span> <span class=\"token string\">'Christopher Nolan'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 rating 컬럼의 값이 8보다 크거나 director 컬럼의 값이 'Christopher Nolan'인 데이터만 조회됩니다.</p>\n<h3 id=\"between-and\" style=\"position:relative;\"><a href=\"#between-and\" aria-label=\"between and permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BETWEEN AND</h3>\n<p>BETWEEN AND 조건은 두 값 사이의 범위에 해당하는 데이터를 조회할 수 있어요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">WHERE</span> rating <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">8</span> <span class=\"token operator\">AND</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 rating 컬럼의 값이 8과 9 사이인 데이터만 조회됩니다.</p>\n<h3 id=\"in\" style=\"position:relative;\"><a href=\"#in\" aria-label=\"in permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IN</h3>\n<p>IN 조건은 여러 값 중 하나에 해당하는 데이터를 조회할 수 있어요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">WHERE</span> director <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Christopher Nolan'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Quentin Tarantino'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 director 컬럼의 값이 'Christopher Nolan' 또는 'Quentin Tarantino'인 데이터만 조회됩니다.</p>\n<h3 id=\"like--_\" style=\"position:relative;\"><a href=\"#like--_\" aria-label=\"like  _ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LIKE (%, _)</h3>\n<p>LIKE 조건은 특정 패턴에 해당하는 데이터를 조회할 수 있어요.</p>\n<p><code class=\"language-text\">%</code> 는 0개 이상의 문자를 의미하고, <code class=\"language-text\">_</code> 는 1개의 문자를 의미합니다.</p>\n<p>다음과 같이 사용할 수 있어요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">WHERE</span> director <span class=\"token operator\">LIKE</span> <span class=\"token string\">'N%'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 director 컬럼의 값이 'N'으로 시작하는 데이터만 조회됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">WHERE</span> director <span class=\"token operator\">LIKE</span> <span class=\"token string\">'The ___'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 director 컬럼의 값이 'The'로 시작하고 3개의 문자가 있는 데이터만 조회됩니다.</p>\n<h3 id=\"not\" style=\"position:relative;\"><a href=\"#not\" aria-label=\"not permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NOT</h3>\n<p>NOT 조건은 특정 조건에 해당하지 않는 데이터를 조회할 수 있어요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">WHERE</span> director <span class=\"token operator\">NOT</span> <span class=\"token operator\">LIKE</span> <span class=\"token string\">'%Nolan%'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 director 컬럼의 값에 'Nolan'이 포함되지 않은 데이터만 조회됩니다.</p>\n<h2 id=\"case\" style=\"position:relative;\"><a href=\"#case\" aria-label=\"case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CASE</h2>\n<p>CASE 문은 조건에 따라 다른 값을 반환하는 명령어에요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> title<span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">CASE</span> <span class=\"token keyword\">WHEN</span> rating <span class=\"token operator\">>=</span><span class=\"token number\">8</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'좋음'</span>\n<span class=\"token keyword\">WHEN</span> rating <span class=\"token operator\">>=</span><span class=\"token number\">5</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'보통'</span>\n<span class=\"token keyword\">WHEN</span> rating <span class=\"token operator\">&lt;</span><span class=\"token number\">5</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'나쁨'</span>\n<span class=\"token keyword\">END</span> <span class=\"token keyword\">AS</span> 영화평점 <span class=\"token keyword\">FROM</span> movies<span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 rating 컬럼의 값이 8보다 크면 '좋음'을 반환하고 5보다 크고 8보다 작으면 '보통'을 반환하고 그렇지 않으면 '나쁨'을 반환합니다.</p>\n<h2 id=\"order-by\" style=\"position:relative;\"><a href=\"#order-by\" aria-label=\"order by permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ORDER BY</h2>\n<p>ORDER BY 문은 조회된 데이터를 정렬하는 명령어에요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> rating <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 rating 컬럼의 값을 내림차순으로 정렬합니다.</p>\n<h2 id=\"limit-offset\" style=\"position:relative;\"><a href=\"#limit-offset\" aria-label=\"limit offset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LIMIT, OFFSET</h2>\n<p>LIMIT, OFFSET 문은 조회된 데이터의 개수를 제한하는 명령어에요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 조회된 데이터의 개수를 5개로 제한합니다.</p>\n<p>OFFSET 문은 조회된 데이터의 시작 위치를 지정하는 명령어에요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">5</span> <span class=\"token keyword\">OFFSET</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 작성하면 조회된 데이터의 시작 위치를 10으로 지정하고 5개의 데이터를 조회합니다.</p>\n<p>쉽게말하면 위 명령문은 처음 10개의 데이터를 건너뛰고 5개의 데이터를 조회한다는 의미에요.</p>\n<blockquote>\n<p>SQLite 명령문의 실행순서</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token comment\">-- 3</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token comment\">-- 1</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token comment\">-- 2</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token comment\">-- 4</span>\n<span class=\"token keyword\">LIMIT</span> <span class=\"token comment\">-- 6</span>\n<span class=\"token keyword\">OFFSET</span> <span class=\"token comment\">-- 5</span></code></pre></div>\n</blockquote>\n<h2 id=\"group-by\" style=\"position:relative;\"><a href=\"#group-by\" aria-label=\"group by permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GROUP BY</h2>\n<p>GROUP BY문은 특정 컬럼을 기준으로 데이터를 그룹화하는 명령어에요.</p>\n<p>보통 집계함수랑 같이 사용됩니당.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> director<span class=\"token punctuation\">,</span> <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>revenue<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> director<span class=\"token punctuation\">;</span></code></pre></div>\n<p>이런식으로 작성하면 director 컬럼을 기준으로 데이터를 그룹화하고, revenue 컬럼의 값을 합산합니다.</p>\n<blockquote>\n<p>🚨 GROUP BY 없이 집계함수를 쓰면 데이터를 그룹화하지 않고 데이터베이스의 모든 데이터에 대해 집계함수를 적용합니다.</p>\n</blockquote>\n<h2 id=\"having\" style=\"position:relative;\"><a href=\"#having\" aria-label=\"having permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HAVING</h2>\n<p>HAVING 문은 GROUP BY 문과 함께 사용되며, 그룹화된 데이터에 대한 조건을 지정하는 명령어에요.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> director<span class=\"token punctuation\">,</span> <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>revenue<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> movies <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> director <span class=\"token keyword\">HAVING</span> <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>revenue<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1000000000</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이런식으로 작성하면 revenue 컬럼의 값이 1000000000보다 큰 데이터만 조회됩니다.</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#dml-data-manipulation-language\">DML (Data Manipulation Language)</a></p>\n<ul>\n<li>\n<p><a href=\"#update-commands\">Update Commands</a></p>\n<ul>\n<li><a href=\"#insert-into-values\">INSERT INTO VALUES</a></li>\n<li><a href=\"#update\">UPDATE</a></li>\n<li><a href=\"#delete\">DELETE</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#query-commands\">Query Commands</a></p>\n<ul>\n<li><a href=\"#select\">SELECT</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#where\">WHERE</a></p>\n<ul>\n<li><a href=\"#and-or\">AND, OR</a></li>\n<li><a href=\"#between-and\">BETWEEN AND</a></li>\n<li><a href=\"#in\">IN</a></li>\n<li><a href=\"#like--_\">LIKE (%, _)</a></li>\n<li><a href=\"#not\">NOT</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#case\">CASE</a></p>\n</li>\n<li>\n<p><a href=\"#order-by\">ORDER BY</a></p>\n</li>\n<li>\n<p><a href=\"#limit-offset\">LIMIT, OFFSET</a></p>\n</li>\n<li>\n<p><a href=\"#group-by\">GROUP BY</a></p>\n</li>\n<li>\n<p><a href=\"#having\">HAVING</a></p>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"DML (Data Manipulation Language)","date":"2025년 09월 18일 23:27:00","description":"Data Manipulation Language?","category":"Database","tags":["SQL","SQLite"],"thumbnail":null},"fields":{"slug":"/250918-dml/","autoDate":null}},"previous":{"fields":{"slug":"/250915-bubble-sort/","autoDate":null},"frontmatter":{"title":"버블 정렬 (Bubble Sort)"}},"next":null},"pageContext":{"id":"93c74984-72db-51a0-873e-a7ec9d37796d","previousPostId":"777c8a68-5fc4-57f1-8278-8532da33b878","nextPostId":null}},"staticQueryHashes":["230163734","3517523002"],"slicesMap":{}}